# Use postgres/example user/password credentials

volumes:
    database-data:
    redis-data:

networks:
    stack:
        name: stack
        external: false

services:
    database:
        container_name: database
        image: postgres
        restart: always
        volumes:
            - database-data:/var/lib/postgresql/data/
        env_file: .env
        networks:
            - stack

    redis:
        image: redis:7-alpine
        restart: always
        command: redis-server --appendonly yes
        volumes:
            - redis-data:/data
        networks:
            - stack
        ports:
            - 6379:6379

    calcom-api-v2:
        build:
            context: ./calcom
            dockerfile: apps/api/v2/Dockerfile
        restart: always
        networks:
            - stack
        ports:
            - 80:80
        env_file: .env
        environment:
            - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
            - DATABASE_DIRECT_URL=${DATABASE_URL}
            - REDIS_URL=redis://redis:6379
            - API_PORT=80
            - API_URL=http://localhost
            - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
            - JWT_SECRET=${NEXTAUTH_SECRET}
            - STRIPE_API_KEY=${STRIPE_API_KEY}
            - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
            - STRIPE_TEAM_MONTHLY_PRICE_ID=${STRIPE_TEAM_MONTHLY_PRICE_ID}
            - IS_TEAM_BILLING_ENABLED=${IS_TEAM_BILLING_ENABLED}
            - NEXT_PUBLIC_API_V2_URL=${NEXT_PUBLIC_API_V2_URL}
            - NEXT_PUBLIC_WEBAPP_URL=${NEXT_PUBLIC_WEBAPP_URL}
            - WEB_APP_URL=${NEXT_PUBLIC_WEBAPP_URL}
            - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
            - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
            - NEXT_PUBLIC_VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
        depends_on:
            - database
            - redis

    # calcom:
    #     image: calcom.docker.scarf.sh/calcom/cal.com
    #     build:
    #         context: .
    #         dockerfile: Dockerfile
    #         args:
    #             NEXT_PUBLIC_WEBAPP_URL: ${NEXT_PUBLIC_WEBAPP_URL}
    #             NEXT_PUBLIC_API_V2_URL: ${NEXT_PUBLIC_API_V2_URL}
    #             NEXT_PUBLIC_LICENSE_CONSENT: ${NEXT_PUBLIC_LICENSE_CONSENT}
    #             NEXT_PUBLIC_WEBSITE_TERMS_URL: ${NEXT_PUBLIC_WEBSITE_TERMS_URL}
    #             NEXT_PUBLIC_WEBSITE_PRIVACY_POLICY_URL: ${NEXT_PUBLIC_WEBSITE_PRIVACY_POLICY_URL}
    #             CALCOM_TELEMETRY_DISABLED: ${CALCOM_TELEMETRY_DISABLED}
    #             NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    #             CALENDSO_ENCRYPTION_KEY: ${CALENDSO_ENCRYPTION_KEY}
    #             DATABASE_URL: ${DATABASE_URL}
    #             DATABASE_DIRECT_URL: ${DATABASE_URL}
    #     restart: always
    #     networks:
    #         - stack
    #     ports:
    #         - 3000:3000
    #     env_file: .env
    #     environment:
    #         - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
    #         - DATABASE_DIRECT_URL=${DATABASE_URL}
    #         - NEXT_PUBLIC_API_V2_URL=${NEXT_PUBLIC_API_V2_URL}
    #     depends_on:
    #         - database
    #         - calcom-api-v2

    # Optional use of Prisma Studio. In production, comment out or remove the section below to prevent unwanted access to your database.
    # studio:
    #     image: calcom.docker.scarf.sh/calcom/cal.com
    #     restart: always
    #     networks:
    #         - stack
    #     ports:
    #         - 5555:5555
    #     env_file: .env
    #     environment:
    #         - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
    #         - DATABASE_DIRECT_URL=${DATABASE_URL}
    #     depends_on:
    #         - database
    #     command:
    #         - npx
    #         - prisma
    #         - studio
# END SECTION: Optional use of Prisma Studio.
